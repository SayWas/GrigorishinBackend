"""Initial DB

Revision ID: 52fa6929cb47
Revises: 
Create Date: 2023-07-06 22:17:40.607936

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '52fa6929cb47'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('author', sa.String(), nullable=False),
                    sa.Column('download_link', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('country_block',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('role',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('permissions', sa.JSON(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('country',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('country_block_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['country_block_id'], ['country_block.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('library_preview',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('quote', sa.String(), nullable=False),
                    sa.Column('quote_author', sa.String(), nullable=False),
                    sa.Column('book_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('id', sa.Integer(), sa.Identity(always=False, increment=1), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('firstName', sa.String(), nullable=False),
                    sa.Column('lastName', sa.String(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
                    sa.Column('hashed_password', sa.String(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('course',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('subtitle', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('link', sa.String(), nullable=False),
                    sa.Column('price', sa.Integer(), nullable=False),
                    sa.Column('starting_at', sa.TIMESTAMP(), nullable=False),
                    sa.Column('country_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('book_course',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('book_id', sa.Integer(), nullable=True),
                    sa.Column('course_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
                    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('comment',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('text', sa.String(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_course',
                    sa.Column('id', sa.Integer(), sa.Identity(always=True, increment=1), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('course_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_course')
    op.drop_table('comment')
    op.drop_table('book_course')
    op.drop_table('course')
    op.drop_table('user')
    op.drop_table('library_preview')
    op.drop_table('country')
    op.drop_table('role')
    op.drop_table('country_block')
    op.drop_table('book')
    # ### end Alembic commands ###
